"""Improved APIkey table and added Email campaign

Revision ID: f3d4bd1738fa
Revises: 918c4ba4378c
Create Date: 2025-01-05 09:14:25.106187

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f3d4bd1738fa'
down_revision = '918c4ba4378c'
branch_labels = None
depends_on = None


def upgrade():
    # Create ENUM type first
    op.execute("CREATE TYPE apikeytype AS ENUM ('TEST', 'LIVE')")
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_key_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.add_column(sa.Column('key_prefix', sa.String(length=8), nullable=False))
        batch_op.add_column(sa.Column('key_type', sa.Enum('TEST', 'LIVE', name='apikeytype'), nullable=False))
        batch_op.add_column(sa.Column('daily_requests', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('last_reset_date', sa.Date(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('key_hash',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('permissions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
        batch_op.alter_column('expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
        batch_op.drop_constraint('api_keys_key_hash_key', type_='unique')
        batch_op.drop_index('ix_api_keys_is_active')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index('ix_api_keys_is_active', ['is_active'], unique=False)
        batch_op.create_unique_constraint('api_keys_key_hash_key', ['key_hash'])
        batch_op.alter_column('expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
        batch_op.alter_column('permissions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
        batch_op.alter_column('key_hash',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('last_reset_date')
        batch_op.drop_column('daily_requests')
        batch_op.drop_column('key_type')
        batch_op.drop_column('key_prefix')

    op.drop_table('api_key_usage')
    # ### end Alembic commands ###

    # Drop ENUM type
    op.execute("DROP TYPE apikeytype")
